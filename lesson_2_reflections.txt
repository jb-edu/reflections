What happens when you initialize a repository? Why do you need to do it?

  It gets ready to accept files within the folder as part of the 
  repository. I.e. creates a new repository.


How is the staging area different from the working directory and the repository? What value do you think it offers?

  It gives you a temporary location to organize how you want the
  repository to be structured before committing anything. It has the value
  of allowing you to easily back out any changes where mistakes were made.

How can you use the staging area to make sure you have one commit per logical change?

  Only include files in the staging area that relate to the logical
  change.
  
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

  When you are experimenting with changes that you might not want to
  keep. Branches help by keeping the experimental code separate from
  the main branch of code.

How do the diagrams help you visualize the branch structure?

  It makes the connections more obvious for traceability (to parent 
  nodes).

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

  The result is that we end up with one set of source files representing
  code changes made on two separate development paths (branches). We
  represent it the way we do in the diagram so that we can see all of the
  history that resulted from both branches.

